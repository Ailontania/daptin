# The container definition we want to use for developing our application
box:
  id: golang
  ports:
  - "6336"
# Defining the dev pipeline
dev:
  steps:
  - internal/watch:
      code: |
        go build ./...
        ./source
      reload: true
build:
  steps:
  - script:
      name: dashboard build
      code: |
        cd daptinweb
        npm install -g @quasar/cli
        npm install
        npm run build
        cd ..
  - script:
      name: go get rice
      code: |
        go get github.com/GeertJohan/go.rice/rice
        rice embed-go
  - script:
      name: go build
      code: |
        go build  -ldflags='-extldflags "-static"' -a -installsuffix cgo -o main
  - script:
      name: go test
      code: |
        go test ./...
  - internal/docker-build:
      dockerfile: Dockerfile
      image-name: daptin/daptin:wercker # name used to refer to this image until it's pushed
  - internal/docker-push:
      image-name: daptin/daptin:wercker
      username: $DOCKER_USERNAME # Docker Hub username. When using CLI, set using "export X_USERNAME=<username>"
      password: $DOCKER_PASSWORD # Docker Hub password. When using CLI, set using "export X_PASSWORD=<password>"
      repository: docker.io/daptin/daptin
      tag: wercker